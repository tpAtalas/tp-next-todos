name: Build and Push to Google Artifact Registry

on:
  pull_request:
    types:
      - closed
    branches:
      - 'master'

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    name: Build and Push to Google Cloud Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCR_SERVICE_ACCOUNT }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Authorize Docker push for Google Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCR_DEPLOY_REGION }}-docker.pkg.dev

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Tag the Docker image
        run: |-
          docker build -t ${{ secrets.GCR_DEPLOY_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/${{ github.event.repository.name }}:${{ github.sha }} \
            --build-arg BUILD_IMAGE_DOMAIN=${{ vars.GCR_IMAGE_DOMAIN }} \
            --build-arg BUILD_HOSTNAME=${{ vars.GCR_HOSTNAME }} \
            --build-arg BUILD_EMAIL_SERVER_HOST=${{ vars.GCR_EMAIL_SERVER_HOST }} \
            --build-arg BUILD_EMAIL_SERVER_PORT=${{ vars.GCR_EMAIL_SERVER_PORT }} \
            --build-arg BUILD_EMAIL_FROM=${{ vars.GCR_EMAIL_FROM }} \
            --build-arg BUILD_SOCIAL_GITHUB=${{ vars.GCR_SOCIAL_GITHUB }} \
            .

      - name: Push the image to the Google Artifact Registry (GAR)
        run: |-
          docker push ${{ secrets.GCR_DEPLOY_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/${{ github.event.repository.name }}:${{ github.sha }}
